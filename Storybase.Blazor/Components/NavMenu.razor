<MudNavMenu>
    <CascadingAuthenticationState>
        ﻿<AuthorizeView>
            <Authorized>
                <MudNavLink Href="/profile">Hello @UserName</MudNavLink>
                <MudNavLink Href="Account/Logout">Log out</MudNavLink>
            </Authorized>
            <NotAuthorized>
                <MudNavLink Href="Account/Login">Log in</MudNavLink>
            </NotAuthorized>
            <Authorizing>
                <MudSkeleton />
            </Authorizing>
        </AuthorizeView>
    </CascadingAuthenticationState>
    <MudDivider />
    <MudNavLink Icon="@Icons.Material.Filled.Home" Href="/home">
        Home    
    </MudNavLink>
    <MudNavLink Icon="@Icons.Material.Filled.LibraryBooks" Href="/library">
        Library
    </MudNavLink>
    <MudNavLink Icon="@Icons.Material.Filled.Settings" Match="NavLinkMatch.All" Href="/settings">
        Settings
    </MudNavLink>
    <MudNavLink Icon="@Icons.Material.Filled.Help" Href="/help">
        Help
    </MudNavLink>
</MudNavMenu>

@code {
    private string UserName = "";
        [CascadingParameter]
        private Task<AuthenticationState> authenticationState { get; set; }


    protected override async Task OnInitializedAsync()
    {
        if (authenticationState is not null)
        {
            var state = await authenticationState;
            UserName = state?.User?.Identity?.Name ?? string.Empty;
        }
    }
}